mixin crud-field( key, field, doc, prefix )
  formKey = ( prefix || "" ) + key
  .control-group
    label.control-label= field.name
    case field.type
      when "multiline"
        textarea( name=formKey, placeholder=field.placeholder )= doc[ key ]
      when "select"
        select( name=formKey, placeholder=field.placeholder )
          each option in field.options.models
            option( value=option.id, selected=option.id === doc[ key ] )= option.get( "name" )
      when "autocomplete"
        cache = {}
        - cache.byName = {}
        - cache.byId = {}
        - _.each( field.options.toJSON(), function(f) { cache.byName[ f[ field.completionField ] ] = f._id; cache.byId[ f._id ] = f[ field.completionField ] } )

        input.b-typeahead( type="text", name=formKey, placeholder=field.placeholder, value=cache.byId[ doc[ key ] ], data-provide="typeahead", data-items="4", data-cache=cache, data-source=_.pluck(field.options.toJSON(), field.completionField) )
      when "array"
        .row-fluid
          .span3.b-array-content
            if doc[key]
              each childDoc in doc[key]
                .control-group.well.well-small
                  each child, childKey in field.children
                    mixin crud-field( childKey, child, childDoc, key + "[]" )
                    button.b-array-splice.btn.btn-danger(type="button", data-field=field.name, data-item-id=( doc[ key ] || {} )._id ) Удалить
        .row-fluid
          .span3
            button.b-array-push.btn.btn-primary.pull-left(type="button", data-field=field.name) Добавить

      default
        input( type="text", name=key, placeholder=field.placeholder, value=doc[ key ] )

if locals.render
  mixin crud-field( locals.key, locals.field, locals.doc, locals.prefix )